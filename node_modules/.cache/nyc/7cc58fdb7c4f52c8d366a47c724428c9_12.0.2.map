{"version":3,"sources":["app.js"],"names":["express","require","bodyParser","app","use","json","user","User","rides","post","req","res","ride","body","hasOrigin","Object","prototype","hasOwnProperty","call","hasDestination","hasTime","hasAllowStops","hasAvaliableSpace","hasDescription","push","Ride","userID","origin","destination","time","allowStops","avaliableSpace","description","length","status","send","listen"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,aAAR,CAAnB;;AAEA,IAAME,MAAMH,SAAZ;AACAG,IAAIC,GAAJ,CAAQF,WAAWG,IAAX,EAAR;;AAEA;AACA,IAAMC,OAAO,IAAIC,cAAJ,CAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,YAAjC,EAA+C,YAA/C,EAA6D,wBAA7D,CAAb;;AAEA;AACA,IAAMC,QAAQ,EAAd;;AAGAL,IAAIM,IAAJ,CAAS,eAAT,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtC,MAAMC,OAAOF,IAAIG,IAAjB;AACA,MAAMC,YAAYC,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,IAArC,EAA2C,QAA3C,CAAlB;AACA,MAAMO,iBAAiBJ,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,IAArC,EAA2C,aAA3C,CAAvB;AACA,MAAMQ,UAAUL,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,IAArC,EAA2C,MAA3C,CAAhB;AACA,MAAMS,gBAAgBN,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,IAArC,EAA2C,YAA3C,CAAtB;AACA,MAAMU,oBAAoBP,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,IAArC,EAA2C,gBAA3C,CAA1B;AACA,MAAMW,iBAAiBR,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,IAArC,EAA2C,aAA3C,CAAvB;;AAEA,MAAIE,aAAaK,cAAb,IAA+BC,OAA/B,IAA0CC,aAA1C,IACFC,iBADE,IACmBC,cADvB,EACuC;AACrCf,UAAMgB,IAAN,CAAW,IAAIC,cAAJ,CAASnB,KAAKoB,MAAd,EAAsBd,KAAKe,MAA3B,EAAmCf,KAAKgB,WAAxC,EAAqDhB,KAAKiB,IAA1D,EAAgEjB,KAAKkB,UAArE,EAAiFlB,KAAKmB,cAAtF,EAAsGnB,KAAKoB,WAA3G,CAAX;AACArB,QAAIN,IAAJ,CAASG,MAAMA,MAAMyB,MAAN,GAAe,CAArB,CAAT;AACD,GAJD,MAIO;AACLtB,QAAIuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gDAArB;AACD;AACF,CAhBD;;AAkBAhC,IAAIiC,MAAJ,CAAW,IAAX","file":"app.js","sourceRoot":"C:/Users/opeol/Desktop/Ride-My-Way/server","sourcesContent":["import Ride from './classes/ride';\r\nimport User from './classes/user';\r\n\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\n// Just some mock users for testing purposes\r\nconst user = new User('Jide', 'Dayo', 'Male', '08/03/1990', '0801472689', 'JideDayo@ridemyway.com');\r\n\r\n// Array to hold the rides\r\nconst rides = [\r\n];\r\n\r\napp.post('/api/v1/rides', (req, res) => {\r\n  const ride = req.body;\r\n  const hasOrigin = Object.prototype.hasOwnProperty.call(ride, 'origin');\r\n  const hasDestination = Object.prototype.hasOwnProperty.call(ride, 'destination');\r\n  const hasTime = Object.prototype.hasOwnProperty.call(ride, 'time');\r\n  const hasAllowStops = Object.prototype.hasOwnProperty.call(ride, 'allowStops');\r\n  const hasAvaliableSpace = Object.prototype.hasOwnProperty.call(ride, 'avaliableSpace');\r\n  const hasDescription = Object.prototype.hasOwnProperty.call(ride, 'description');\r\n\r\n  if (hasOrigin && hasDestination && hasTime && hasAllowStops &&\r\n    hasAvaliableSpace && hasDescription) {\r\n    rides.push(new Ride(user.userID, ride.origin, ride.destination, ride.time, ride.allowStops, ride.avaliableSpace, ride.description));\r\n    res.json(rides[rides.length - 1]);\r\n  } else {\r\n    res.status(400).send('The information you provided doesn\\'t conform.');\r\n  }\r\n});\r\n\r\napp.listen(3000);\r\n"]}