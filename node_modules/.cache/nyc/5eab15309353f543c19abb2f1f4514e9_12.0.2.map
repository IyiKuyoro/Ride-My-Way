{"version":3,"sources":["app.js"],"names":["express","require","bodyParser","app","use","json","driver1","User","driver2","driver3","rides","Ride","userID","get","req","res","post","request","body","hasRequesterID","Object","prototype","hasOwnProperty","call","hasDestination","forEach","element","rideID","params","rideId","addRequest","status","send","server","listen","console","log","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,aAAR,CAAnB;;AAEA,IAAME,MAAMH,SAAZ;AACAG,IAAIC,GAAJ,CAAQF,WAAWG,IAAX,EAAR;;AAEA;AACA,IAAMC,UAAU,IAAIC,cAAJ,CAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,YAAjC,EAA+C,aAA/C,EAA8D,wBAA9D,CAAhB;AACA,IAAMC,UAAU,IAAID,cAAJ,CAAS,SAAT,EAAoB,SAApB,EAA+B,MAA/B,EAAuC,YAAvC,EAAqD,aAArD,EAAoE,wBAApE,CAAhB;AACA,IAAME,UAAU,IAAIF,cAAJ,CAAS,MAAT,EAAiB,SAAjB,EAA4B,MAA5B,EAAoC,YAApC,EAAkD,aAAlD,EAAiE,oBAAjE,CAAhB;;AAEA;AACA,IAAMG,QAAQ;AACZ;AACA,IAAIC,cAAJ,CAASL,QAAQM,MAAjB,EAAyB,OAAzB,EAAkC,OAAlC,EAA2C,QAA3C,EAAqD,IAArD,EAA2D,CAA3D,EAA8D,4BAA9D,CAFY,EAGZ,IAAID,cAAJ,CAASH,QAAQI,MAAjB,EAAyB,OAAzB,EAAkC,OAAlC,EAA2C,SAA3C,EAAsD,KAAtD,EAA6D,CAA7D,EAAgE,mBAAhE,CAHY,EAIZ,IAAID,cAAJ,CAASF,QAAQG,MAAjB,EAAyB,SAAzB,EAAoC,SAApC,EAA+C,QAA/C,EAAyD,KAAzD,EAAgE,CAAhE,CAJY,CAAd;;AAOAT,IAAIU,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrCA,MAAIV,IAAJ,CAASK,KAAT;AACD,CAFD;;AAIAP,IAAIa,IAAJ,CAAS,gCAAT,EAA2C,UAACF,GAAD,EAAMC,GAAN,EAAc;AACvD,MAAME,UAAUH,IAAII,IAApB;AACA,MAAMC,iBAAiBC,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,OAArC,EAA8C,aAA9C,CAAvB;AACA,MAAMO,iBAAiBJ,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,OAArC,EAA8C,aAA9C,CAAvB;;AAEA,MAAIE,kBAAkBK,cAAtB,EAAsC;AACpCd,UAAMe,OAAN,CAAc,UAACC,OAAD,EAAa;AACzB,UAAIA,QAAQC,MAAR,KAAmBb,IAAIc,MAAJ,CAAWC,MAAlC,EAA0C;AACxCH,gBAAQI,UAAR,CAAmBb,OAAnB;AACD;AACF,KAJD;AAKAF,QAAIV,IAAJ,CAASK,KAAT;AACD,GAPD,MAOO;AACLK,QAAIgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB;AACD;AACF,CAfD;;AAiBA,IAAMC,SAAS9B,IAAI+B,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACpCC,UAAQC,GAAR,wBAAiCH,OAAOI,OAAP,GAAiBC,IAAlD;AACD,CAFc,CAAf;;kBAIeL,M","file":"app.js","sourceRoot":"C:/Users/opeol/Desktop/Ride-My-Way/server","sourcesContent":["import Ride from './classes/ride';\r\nimport User from './classes/user';\r\n\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\n// Just some mock users for testing purposes\r\nconst driver1 = new User('Jide', 'Dayo', 'Male', '12/05/1990', '08123791782', 'JideDayo@ridemyway.com');\r\nconst driver2 = new User('Francis', 'Odebala', 'Male', '16/05/1985', '08127685496', 'FrancisO@ridemyway.com');\r\nconst driver3 = new User('Okon', 'Johnson', 'Male', '19/02/1993', '08036489524', 'Okon@ridemyway.com');\r\n\r\n// Array to hold the rides\r\nconst rides = [\r\n  // Just some mock rides for testing purposes\r\n  new Ride(driver1.userID, 'Ikeja', 'Musin', '9:30AM', true, 3, 'Ikeja to Mushin via Oshodi'),\r\n  new Ride(driver2.userID, 'Lagos', 'Enugu', '12:00PM', false, 2, 'Non-stop to enugu'),\r\n  new Ride(driver3.userID, 'Ikorodu', 'Idumota', '1:45pm', false, 3),\r\n];\r\n\r\napp.get('/api/v1/rides', (req, res) => {\r\n  res.json(rides);\r\n});\r\n\r\napp.post('/api/v1/rides/:rideId/requests', (req, res) => {\r\n  const request = req.body;\r\n  const hasRequesterID = Object.prototype.hasOwnProperty.call(request, 'requesterID');\r\n  const hasDestination = Object.prototype.hasOwnProperty.call(request, 'destination');\r\n\r\n  if (hasRequesterID && hasDestination) {\r\n    rides.forEach((element) => {\r\n      if (element.rideID === req.params.rideId) {\r\n        element.addRequest(request);\r\n      }\r\n    });\r\n    res.json(rides);\r\n  } else {\r\n    res.status(400).send('Invalid data.');\r\n  }\r\n});\r\n\r\nconst server = app.listen(3000, () => {\r\n  console.log(`Listening on port ${server.address().port} ...`);\r\n});\r\n\r\nexport default server;\r\n"]}