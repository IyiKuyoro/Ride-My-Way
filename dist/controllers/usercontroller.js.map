{"version":3,"sources":["../../server/controllers/usercontroller.js"],"names":["dotenv","config","genID","Math","floor","random","controller","postSignUp","req","res","helper","validEmail","body","EmailAddress","valid","bcrypt","genSalt","err","salt","hash","Password","error","text","values","FirstName","LastName","Sex","DOB","PhoneNumber","client","query","error1","result","status","json","message","token","jwt","sign","email","rows","userId","ID","process","env","KEY","expiresIn","response","data","e","deleteTestUser","callback","sql"],"mappings":"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","file":"usercontroller.js","sourcesContent":["import dotenv from 'dotenv';\r\nimport jwt from 'jsonwebtoken';\r\nimport bcrypt from 'bcrypt';\r\nimport helper from '../helpers/helper';\r\nimport client from '../model/db';\r\n\r\ndotenv.config();\r\n\r\nconst genID = () => `U_${Math.floor(Math.random() * 9000000000) + 1000000000}`; //  Got this from a web source I can't remember now.\r\nconst controller = {\r\n  postSignUp: (req, res) => {\r\n    helper.validEmail(req.body.EmailAddress, (valid) => {\r\n      try {\r\n        if (valid) {\r\n          bcrypt.genSalt(10, (err, salt) => {\r\n            if (err) {\r\n              throw err;\r\n            }\r\n            bcrypt.hash(req.body.Password, salt, (error, hash) => {\r\n              if (err) {\r\n                throw err;\r\n              }\r\n              const text = 'INSERT INTO public.\"Users\" (\"ID\", \"FirstName\", \"LastName\", \"Sex\", \"DOB\", \"MobileNumber\", \"EmailAddress\", \"Password\", \"RidesOffered\", \"RidesTaken\", \"Friends\") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING *;';\r\n              const values = [genID(), req.body.FirstName, req.body.LastName, req.body.Sex, req.body.DOB, req.body.PhoneNumber, req.body.EmailAddress, hash, 0, 0, 0];\r\n              client.query(text, values, (error1, result) => {\r\n                if (error1) {\r\n                  res.status(400);\r\n                  res.json({\r\n                    status: 'fail',\r\n                    message: 'Could not add user to database',\r\n                  });\r\n                } else {\r\n                  const token = jwt.sign(\r\n                    {\r\n                      email: result.rows[0].EmailAddress,\r\n                      userId: result.rows[0].ID,\r\n                    },\r\n                    process.env.KEY,\r\n                    {\r\n                      expiresIn: '1h',\r\n                    }\r\n                  );\r\n                  const response = {\r\n                    token,\r\n                    status: 'Success',\r\n                    data: {\r\n                      ID: result.rows[0].ID,\r\n                      FirstName: result.rows[0].FirstName,\r\n                      LastName: result.rows[0].LastName,\r\n                      Sex: result.rows[0].Sex,\r\n                      DOB: result.rows[0].DOB,\r\n                      EmailAddress: result.rows[0].EmailAddress,\r\n                    },\r\n                  };\r\n                  res.json(response);\r\n                }\r\n              });\r\n            });\r\n          });\r\n        } else {\r\n          res.status(400);\r\n          res.json({\r\n            status: 'fail',\r\n            message: 'Could not add user to database',\r\n          });\r\n        }\r\n      } catch (e) {\r\n        res.status(400);\r\n        res.json({\r\n          status: 'fail',\r\n          message: 'Could not add user to database',\r\n        });\r\n      }\r\n    });\r\n  },\r\n  deleteTestUser: (email, callback) => {\r\n    helper.validEmail(email, (response) => {\r\n      if (response) {\r\n        const sql = `DELETE FROM public.\"Users\" WHERE \"EmailAddress\" = '${email}'`;\r\n        client.query(sql, () => {\r\n          callback();\r\n        });\r\n      } else {\r\n        callback();\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nexport default controller;\r\n"]}