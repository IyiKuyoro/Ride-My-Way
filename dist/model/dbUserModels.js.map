{"version":3,"sources":["../../server/model/dbUserModels.js"],"names":["genID","Math","floor","random","user","addUser","object","result","bcrypt","genSalt","err","salt","console","log","hash","Password","error","text","values","FirstName","LastName","Sex","DOB","PhoneNumber","EmailAddress","client","query","error1","res","stack","controller","postSuccess","rows"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,QAAQ,SAARA,KAAQ;AAAA,iBAAWC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,UAA3B,IAAyC,UAApD;AAAA,CAAd;;AAEA,IAAMC,OAAO;AACXC,WAAS,iBAACC,MAAD,EAAY;AACnB,QAAIC,SAAS,EAAb;;AAEAC,qBAAOC,OAAP,CAAe,EAAf,EAAmB,UAACC,GAAD,EAAMC,IAAN,EAAe;AAChC,UAAID,GAAJ,EAAS;AACPE,gBAAQC,GAAR,CAAYH,GAAZ;AACD;AACDF,uBAAOM,IAAP,CAAYR,OAAOS,QAAnB,EAA6BJ,IAA7B,EAAmC,UAACK,KAAD,EAAQF,IAAR,EAAiB;AAClD,YAAIJ,GAAJ,EAAS;AACPE,kBAAQC,GAAR,CAAYG,KAAZ;AACD;AACD,YAAMC,OAAO,kOAAb;AACA,YAAMC,SAAS,CAAClB,OAAD,EAAUM,OAAOa,SAAjB,EAA4Bb,OAAOc,QAAnC,EAA6Cd,OAAOe,GAApD,EAAyDf,OAAOgB,GAAhE,EAAqEhB,OAAOiB,WAA5E,EAAyFjB,OAAOkB,YAAhG,EAA8GV,IAA9G,EAAoH,CAApH,EAAuH,CAAvH,EAA0H,CAA1H,CAAf;AACAW,qBAAOC,KAAP,CAAaT,IAAb,EAAmBC,MAAnB,EAA2B,UAACS,MAAD,EAASC,GAAT,EAAiB;AAC1C,cAAID,MAAJ,EAAY;AACVf,oBAAQC,GAAR,CAAYc,OAAOE,KAAnB;AACD,WAFD,MAEO;AACLC,qCAAWC,WAAX,GAAyB,IAAzB;AACAxB,qBAASqB,IAAII,IAAJ,CAAS,CAAT,CAAT;AACApB,oBAAQC,GAAR,CAAYN,MAAZ;AACD;AACF,SARD;AASD,OAfD;AAgBD,KApBD;AAqBD;AAzBU,CAAb;;kBA4BeH,I","file":"dbUserModels.js","sourcesContent":["import bcrypt from 'bcrypt';\r\nimport client from './db';\r\nimport controller from '../controllers/usercontroller';\r\n\r\n// goten from a source online I forgot to document.\r\nconst genID = () => `U_${Math.floor(Math.random() * 9000000000) + 1000000000}`;\r\n\r\nconst user = {\r\n  addUser: (object) => {\r\n    let result = [];\r\n\r\n    bcrypt.genSalt(10, (err, salt) => {\r\n      if (err) {\r\n        console.log(err);\r\n      }\r\n      bcrypt.hash(object.Password, salt, (error, hash) => {\r\n        if (err) {\r\n          console.log(error);\r\n        }\r\n        const text = 'INSERT INTO public.\"Users\" (\"ID\", \"FirstName\", \"LastName\", \"Sex\", \"DOB\", \"MobileNumber\", \"EmailAddress\", \"Password\", \"RidesOffered\", \"RidesTaken\", \"Friends\") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) RETURNING *;';\r\n        const values = [genID(), object.FirstName, object.LastName, object.Sex, object.DOB, object.PhoneNumber, object.EmailAddress, hash, 0, 0, 0];\r\n        client.query(text, values, (error1, res) => {\r\n          if (error1) {\r\n            console.log(error1.stack);\r\n          } else {\r\n            controller.postSuccess = true;\r\n            result = res.rows[0];\r\n            console.log(result);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  },\r\n};\r\n\r\nexport default user;\r\n"]}